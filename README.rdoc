= snowflake

* http://github.com/luma/snowflake

== DESCRIPTION:

Still todo, I'm afraid. This is still missing the actual graph (relationship) stuff, I'm still focusing on doing the basics right.

FIX (describe your package)



== FEATURES/PROBLEMS:

* FIX (list of features or problems)

== SYNOPSIS:

  FIX (code sample of usage)

=== Atomic Operations and Custom Attributes

Something that may not be obvious if you're used to ActiveRecord or DataMapper is that 
Snowflake has two different kinds of attributes. The first work exactly as you're used to:

	class Person
	  include Snowflake::Node

	  attribute :name,         String, :key => true
	end

	person = Person.new( :name => 'bob' )
	person.attributes 											# => { 'name' => 'bob' }
	person.name = 'jim'
	person.save															# true

The other two of attributes (CustomAttribute) take advantage of Redis' higher order 
data structures. The following person has two custom attributes: a counter called 'counter' 
and a set called 'stuff'. When performing any operation that modifies a CustomAttributes
value the value will be written immediately to Redis, rather than waiting for the next 
save. The write will be atomic, it will either succeed or fail:

	class Person
	  include Snowflake::Node

	  attribute :name,         String, :key => true

	  counter :counter
	  set :stuff
	end

	person = Person.new( :name => 'bob' )
	person.attributes 											# => { 'name' => 'bob' }
	person.name = 'jim'
	person.save															# true
	person.counter = 10 										# 10. immediately saved
	person.counter.incriment 								# 11. immediately saved
	person.stuff.add 'foo'									# ['foo'] (an array like object proxy). immediately saved
	person.stuff.add 'bar'									# ['foo', 'bar'] (an array like object proxy). immediately saved

Every operation you can perform on custom attributes should be performed atomically and,
assuming it modifies the db, persisted immediately.

A limitation of this distinction is that you cannot mass assign custom attributes, either
on initialize or using #attributes=. Custom attributes will also be omitted when calling
#attributes.

== REQUIREMENTS:

* FIX (list of requirements)

== INSTALL:

* FIX (sudo gem install, anything else)

== LICENSE:

(The MIT License)

Copyright (c) 2010 Rolly

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.