
h2. TODO

8.5. Create an Element object, it's the common functionality that both Node and Edge require.
7. The hash properties are never saved a property as a time, the entire hash is saved as once. All other properties can be modified using atomic operations. 
I should split the dsl into hash properties and non-hash properties. Hash properties use the normal modify and bulk save workflow as Datamapper. Non-hash properties
allow operations to be performed and serialised immediately.
8. We need to allow custom hash fields, i.e. ones that were not predefined using the property method. The use cases for both are:
		* Predefined: expected fields, can defined validation/etc
		* Non-predefined: unexpected fields. Dynamically created.
Can we defined types on non-predefined?
9. Relationships. Create a relationship model that includes Element, it can have properties but no relationships. mate /Users/rollyfordham/.rvm/gems/ruby-1.9.2-head/gems/rgl-0.4.0/
10. Search through Sphinx/Xapian: handy full-text node search. http://xapian.org/features. Xapian supports indexing PDFs, Word docs, etc. Need to provide a way to easily customise what gets indexed and how.
		- Convert word docs: http://linux.die.net/man/1/antiword
		- Convert PDF: http://en.wikipedia.org/wiki/Pdftotext
		- http://moinmo.in/HelpOnXapian
11. Indices
12. auto-populated created_at and updated_at.
13. creation of groups based on the union of other networks, can use pub/sub to get notification of when the inner groups change then recalculate the outer group.
14. 


h2. DONE 

1. Dirty tracking, only update modified fields.
2. More powerful defaults, we should accept a proc/lambda
3. If no key field is specific automagically create one called 'id' that gets a 128 bit UUID.
4. When the key field is changed we should also send a RENAME command (requires Dirty tracking)
5. Validation
6. Errors
7. ActiveModel support
8. Ruby 1.9.2 support (well my tests pass anyways)


h2. Possible Names
* Snowflake
* Snowfall